#include<iostream>
#include<vector>
using namespace std;
struct detail
{
    int n;
    int x;
    int y;
    detail(int a,int b,int c)
    {
        n=a;
        x=b;
        y=c;
    }
};
int A[1000][1000];
int n;
bool higher(int a,int b)
{
    if(a==0||a==n-1||b==0||b==n-1)
        return false;
    else if(A[a][b-1]>=A[a][b])
        return false;
    else if(A[a][b+1]>=A[a][b])
        return false;
    else if(A[a-1][b-1]>=A[a][b])
        return false;
    else if(A[a-1][b]>=A[a][b])
        return false ;
    else if(A[a-1][b+1]>=A[a][b])
        return false;
    else if(A[a+1][b]>=A[a][b])
        return false;
    else if(A[a+1][b+1]>=A[a][b])
        return false;
    return true;
}
int main()
{
    int n;
    cin>>n;
    for(int i=0; i<n; i++)
        for(int j=0; j<n; j++)
            cin>>A[i][j];
    vector<detail>store;
    for(int i=1;i<n-1;i++)
    {
        for(int j=1;j<=n-1;j++)
            if(higher(i,j))
                store.push_back(detail(A[i][j],i,j));
    }
    cout<<store.size()<<endl;
    for(int i=0;i<store.size();i++)
    {
        cout<<store[i].n<<" "<<store[i].x<<" "<<store[i].y<<endl;
    }
}
